/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/members/api/members/location": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 나의 위치 등록 API
         * @description 사용자의 위치를 저장합니다.
         */
        post: operations["saveLocation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/medicines": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 약품 등록 API
         * @description 약품 정보를 등록합니다.
         */
        post: operations["createMedicine"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/discard-records": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 약 폐기 기록 리스트 보기 API
         * @description 약을 폐기했던 기록들의 리스트를 조회합니다.
         */
        get: operations["getDiscardRecordList"];
        put?: never;
        /**
         * 약 폐기하기 API
         * @description 이미지와 함께 약 폐기 기록을 생성합니다.
         */
        post: operations["createDiscardRecord"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/medicines/{medicineId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 약품 상세 조회 API
         * @description 약품의 상세 정보를 조회합니다.
         */
        get: operations["getMedicineDetail"];
        put?: never;
        post?: never;
        /**
         * MY 약 삭제하기 API
         * @description My약을 삭제합니다.
         */
        delete: operations["deleteMedicine"];
        options?: never;
        head?: never;
        /**
         * MY 약 수정하기 API
         * @description My약 정보를 수정합니다.
         */
        patch: operations["patchMedicine"];
        trace?: never;
    };
    "/test/get-memberInfo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 액세스 토큰에서 멤버 정보를 가져오는 예시
         * @description 현재 로그인 중인 사용자의 ID를 액세스 토큰에서 추출합니다.
         */
        get: operations["getMemberTestAPI"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/test/exception": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 에러 핸들러 체크 */
        get: operations["testexceptionAPI"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/test/api-test": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 테스트
         * @description 스웨거 사용 예시입니다
         */
        get: operations["testOKAPI"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/members": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 회원 정보 조회 API (마이페이지)
         * @description 현재 사용자의 회원 정보를 조회합니다.
         */
        get: operations["createMedicine_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/members/discard-medicines": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 폐기한 약품 종류 통계 (MY 페이지 하단 차트) API
         * @description 본인이 그동안 폐기했던 약품 종류의 통계를 조회합니다.
         */
        get: operations["getMedicineTypeStatistics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/medicines/d-day": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * MY 약 D-Day 리스트 조회 API
         * @description 회원의 폐기되지 않은 약품 D-Day 리스트를 조회합니다.
         */
        get: operations["getDDayList"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/map/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 폐의약품 수거함 위치 리스트 조회 API
         * @description 폐의약품 수거함의 위치를 조회합니다.
         */
        get: operations["getMapList"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/discard-records/{recordId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 약 폐기 기록 상세보기 API
         * @description 약을 폐기했던 기록의 상세정보를 조회합니다. 조회를 원하는 폐기 기록의 ID를 넘겨주세요
         */
        get: operations["getDiscardRecordDetail"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/login/kakao": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 카카오 로그인 API
         * @description 카카오 로그인 및 회원 가입을 진행하는 API입니다. 인가코드를 넘겨주세요.
         */
        get: operations["kakaoLogin"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ApiResponseString: {
            isSuccess?: boolean;
            code?: string;
            message?: string;
            result?: string;
        };
        MedicineRequest: {
            name: string;
            /** Format: int32 */
            count: number;
            /** Format: date */
            expirationDate: string;
            medicineTypeName: string;
        };
        ApiResponseMedicineDetailResponse: {
            isSuccess?: boolean;
            code?: string;
            message?: string;
            result?: components["schemas"]["MedicineDetailResponse"];
        };
        MedicineDetailResponse: {
            /** Format: int64 */
            medicineId?: number;
            name?: string;
            /** Format: int32 */
            count?: number;
            /** Format: date */
            expirationDate?: string;
            discarded?: boolean;
            /** Format: date */
            discardedAt?: string;
            discardLocation?: string;
            medicineTypeName?: string;
        };
        ApiResponseDiscardRecordCreateResponse: {
            isSuccess?: boolean;
            code?: string;
            message?: string;
            result?: components["schemas"]["DiscardRecordCreateResponse"];
        };
        DiscardRecordCreateResponse: {
            message?: string;
        };
        patchMedicineRequest: {
            name?: string;
            medicineTypeName?: string;
            /** Format: int32 */
            count?: number;
            /** Format: date */
            expirationDate?: string;
        };
        ApiResponseTempExceptionDTO: {
            isSuccess?: boolean;
            code?: string;
            message?: string;
            result?: components["schemas"]["TempExceptionDTO"];
        };
        TempExceptionDTO: {
            /** Format: int32 */
            flag?: number;
        };
        ApiResponseMemberInfoResponse: {
            isSuccess?: boolean;
            code?: string;
            message?: string;
            result?: components["schemas"]["memberInfoResponse"];
        };
        memberInfoResponse: {
            /** Format: int64 */
            memebrId?: number;
            name?: string;
            /** Format: int32 */
            ecoContribution?: number;
            /** Format: int32 */
            level?: number;
            /** @enum {string} */
            memberRank?: "LV1_BASIC" | "LV2_ENVIRONMENT_BEGINNER" | "LV3_JUNIOR_GUARDIAN" | "LV4_COMMUNITY_PROTECTOR" | "LV5_WATER_PROTECTOR" | "LV6_EARTH_DEFENDER";
            /** Format: int32 */
            participantCount?: number;
            /** Format: int32 */
            discardedCount?: number;
            /** Format: int32 */
            myMedicinesCount?: number;
            miniMyMedecineList?: components["schemas"]["miniMyMedecine"][];
        };
        miniMyMedecine: {
            /** Format: int64 */
            medicineId?: number;
            content?: string;
            d_day?: string;
        };
        ApiResponseStatisticsByTypeOfDrug: {
            isSuccess?: boolean;
            code?: string;
            message?: string;
            result?: components["schemas"]["StatisticsByTypeOfDrug"];
        };
        StatisticsByTypeOfDrug: {
            /** Format: int64 */
            memberId?: number;
            typeOfMedecineList?: components["schemas"]["typeOfMedecine"][];
        };
        typeOfMedecine: {
            /** Format: int64 */
            medecineId?: number;
            medecineName?: string;
            /** Format: int32 */
            count?: number;
        };
        ApiResponseMedicineDDayListResponse: {
            isSuccess?: boolean;
            code?: string;
            message?: string;
            result?: components["schemas"]["MedicineDDayListResponse"];
        };
        MedicineDDayListResponse: {
            /** Format: int32 */
            totalCount?: number;
            ddayResponseList?: components["schemas"]["MedicineDDayResponse"][];
        };
        MedicineDDayResponse: {
            name?: string;
            /** Format: date */
            expirationDate?: string;
            /** Format: int32 */
            dday?: number;
        };
        ApiResponseMedicineBoxAreaListResponse: {
            isSuccess?: boolean;
            code?: string;
            message?: string;
            result?: components["schemas"]["MedicineBoxAreaListResponse"];
        };
        MedicineBoxAreaDetailResponse: {
            /** Format: int64 */
            id?: number;
            name?: string;
            /** Format: double */
            latitude?: number;
            /** Format: double */
            longitude?: number;
            address?: string;
            telephone?: string;
        };
        MedicineBoxAreaListResponse: {
            /** Format: int32 */
            totalCount?: number;
            medicineBoxAreaDetailResponseList?: components["schemas"]["MedicineBoxAreaDetailResponse"][];
        };
        ApiResponseDiscardRecordListResponse: {
            isSuccess?: boolean;
            code?: string;
            message?: string;
            result?: components["schemas"]["DiscardRecordListResponse"];
        };
        DiscardRecordDetailResponse: {
            name?: string;
            /** Format: date */
            expirationDate?: string;
            /** Format: date */
            discardedAt?: string;
            discardLocation?: string;
            imageUrl?: string;
        };
        DiscardRecordListResponse: {
            /** Format: int32 */
            totalCount?: number;
            discardRecordDetailResponseList?: components["schemas"]["DiscardRecordDetailResponse"][];
        };
        ApiResponseDiscardRecordDetailResponse: {
            isSuccess?: boolean;
            code?: string;
            message?: string;
            result?: components["schemas"]["DiscardRecordDetailResponse"];
        };
        ApiResponseOAuthResponse: {
            isSuccess?: boolean;
            code?: string;
            message?: string;
            result?: components["schemas"]["OAuthResponse"];
        };
        OAuthResponse: {
            /** Format: int64 */
            memberId?: number;
            accessToken?: string;
            refreshToken?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    saveLocation: {
        parameters: {
            query: {
                location: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseString"];
                };
            };
        };
    };
    createMedicine: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MedicineRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseMedicineDetailResponse"];
                };
            };
        };
    };
    getDiscardRecordList: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseDiscardRecordListResponse"];
                };
            };
        };
    };
    createDiscardRecord: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "multipart/form-data": {
                    request: string;
                    /** Format: binary */
                    image?: string;
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseDiscardRecordCreateResponse"];
                };
            };
        };
    };
    getMedicineDetail: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                medicineId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseMedicineDetailResponse"];
                };
            };
        };
    };
    deleteMedicine: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                medicineId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseString"];
                };
            };
        };
    };
    patchMedicine: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                medicineId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["patchMedicineRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseString"];
                };
            };
        };
    };
    getMemberTestAPI: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseString"];
                };
            };
        };
    };
    testexceptionAPI: {
        parameters: {
            query: {
                flag: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseTempExceptionDTO"];
                };
            };
        };
    };
    testOKAPI: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseString"];
                };
            };
        };
    };
    createMedicine_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseMemberInfoResponse"];
                };
            };
        };
    };
    getMedicineTypeStatistics: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseStatisticsByTypeOfDrug"];
                };
            };
        };
    };
    getDDayList: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseMedicineDDayListResponse"];
                };
            };
        };
    };
    getMapList: {
        parameters: {
            query: {
                userLat: number;
                userLng: number;
                filter: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseMedicineBoxAreaListResponse"];
                };
            };
        };
    };
    getDiscardRecordDetail: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                recordId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseDiscardRecordDetailResponse"];
                };
            };
        };
    };
    kakaoLogin: {
        parameters: {
            query: {
                code: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseOAuthResponse"];
                };
            };
        };
    };
}
